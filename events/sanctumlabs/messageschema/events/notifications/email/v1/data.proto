syntax = "proto3";

package sanctumlabs.messageschema.events.notifications.email.v1;

import "validate/validate.proto";

option go_package = "sanctumlabs/libraries/messageschema/events/model/notifications/email/v1";
option java_multiple_files = true;
option java_outer_classname = "EmailDataProto";
option java_package = "com.sanctumlabs.messageschema.events.model.notifications.email.v1";

// Email is is the email message to deliver
message Email {
  string id = 1 [(validate.rules).string.min_len = 1];

  // from is the sender of the message. This is optional
  optional string from = 2;

  // to is the recipient of the message. this is required
  repeated string to = 3;
  
  // cc is the list of carbon copy recipients of this email. This could be an empty list
  repeated string cc = 4;

  // bcc is the list of carbon copy recipients of this email. This could be an empty list
  repeated string bcc = 5;

  // subject is the subject of the email to send out
  string subject = 6;

  // message is the email body containing the message to send out
  string message = 7;

  // attachments is a list of optional attachments to add to the email message
  repeated EmailAttachment attachments = 8;

  // status is the state of deliver of this email
  optional EmailStatus status = 9 [(validate.rules).enum = {
    not_in: [0],
    defined_only: true
  }];
}

// EmailAttachment represents an attachment in an email message
message EmailAttachment {
  // content of the attachment
  string content = 1 [(validate.rules).string.min_len = 1];;

  // filename of the attachment
  string filename = 2 [(validate.rules).string.min_len = 1];;

  // mimetype of the attachment
  string mimetype = 3;
}

// EMAILStatus is the status of the EMAIL
enum EmailStatus {
  EMAIL_STATUS_UNSPECIFIED = 0;
  ACCEPTED = 1;
  SCHEDULED = 2;
  CANCELED = 3;
  QUEUED = 4;
  SENDING = 5;
  SENT = 6;
  FAILED = 7;
  DELIVERED = 8;
  UNDELIVERED = 9;
  RECEIVING = 10;
  READ = 11;
  PENDING = 12;
}
