# Ref: https://docs.gitlab.com/ee/ci/yaml
# Ref: Predefined variables can be found here https://docs.gitlab.com/ee/ci/variables/predefined_variables.html
image:
  name: bufbuild/buf:1.17.0
  entrypoint: [""]

include:
  - project: sanctumlabs/tools/ci-workflows
    file: .gitlab/templates/slack-notification.yml

variables:
  BUF_CACHE_DIR: ".cache"
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  PIPELINE_NAME: 'Message Schema pipeline'

workflow:
  name: 'Pipeline $CI_COMMIT_TITLE with SHA $CI_COMMIT_SHORT_SHA'

cache:
  key: "$CI_COMMIT_REF_SLUG"
  untracked: false
  paths:
    - ".cache"

stages:
  - lint
  - build
  - test
  - package
  - tag
  - release

lint-format:
  stage: lint
  script:
    - buf lint
    - buf format -d --exit-code
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: "$CI_COMMIT_BRANCH"
    - if: "$CI_COMMIT_TAG"

breaking:
  stage: test
  needs:
    - lint-format
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  script:
    - buf breaking --against "${CI_REPOSITORY_URL}#branch=${CI_MERGE_REQUEST_TARGET_BRANCH_NAME}"

generate:
  stage: build
  needs:
    - lint-format
  script:
    - buf generate
  artifacts:
    paths:
      - "lib"
    when: always
    expire_in: 1 week
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: "$CI_COMMIT_BRANCH"
    - if: "$CI_COMMIT_TAG"

push-buf-registry:
  stage: package
  script:
    - echo ${BUF_API_TOKEN} | buf registry login --username ${BUF_USER} --token-stdin
    - cd shared
    - buf mod update
    - buf push shared -t "${CI_COMMIT_TAG}"
    - cd .. && cd events
    - buf mod update
    - buf push events -t "${CI_COMMIT_TAG}"
    - cd .. && cd messages
    - buf mod update
    - buf push messages -t "${CI_COMMIT_TAG}"
    # Generate the libraries, these will be passed on to the next jobs in the pipeline
    - buf generate
  only:
    - tags

publish-pypi:
  stage: package
  image: python:3.8
  needs:
    - push-buf-registry
  script:
    - cd lib/python
    - make publish-gitlab
  only:
    - tags

publish-npm:
  stage: package
  image: node:20.4.0
  needs:
    - push-buf-registry
  script:
    - cd lib/js
    - echo @sanctumlabs:registry=https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/packages/npm/ > .npmrc
    - echo "//${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}" >> .npmrc
    - npm version ${CI_COMMIT_TAG}
    - NPM_TOKEN=${CI_JOB_TOKEN} npm publish
  only:
    - tags

publish-maven:
  stage: package
  image: gradle:7.4-jdk8
  needs:
    - push-buf-registry
  script:
    - cd lib/kotlin
    - ./gradlew -Pversion="${CI_COMMIT_TAG}" build 
    - ./gradlew -Pversion="${CI_COMMIT_TAG}" -PgitlabProjectID="${CI_PROJECT_ID}" -PgitLabPrivateToken=${CI_PROJECT_ID} -PgitLabTokenName=Job-Token publishLibraryPublicationToGitlabRepository
  only:
    - tags

# publish the next tag automatically and only on the main branch when manually triggered
publish-tag:
  stage: tag
  needs:
    - generate
  image: node:18
  variables:
    GITLAB_TOKEN: ${GITLAB_ACCESS_TOKEN}
  before_script:
    - apt-get update && apt-get install -y --no-install-recommends git-core ca-certificates
    - npm install -g semantic-release @semantic-release/gitlab @semantic-release/changelog @semantic-release/git
  script:
    - semantic-release
  only:
    - main
  when: manual

release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo "running release_job"
  release:
    tag_name: '$CI_COMMIT_TAG'
    description: '$CI_COMMIT_TAG'

slack-success:
  needs:
    - job: publish-tag
      optional: true
    - job: release_job
      optional: true
    - job: push-buf-registry
      optional: true
    - job: publish-pypi
      optional: true
    - job: publish-npm
      optional: true
    - job: publish-maven
      optional: true

slack-failure:
  needs:
    - job: publish-tag
      optional: true
    - job: release_job
      optional: true
    - job: push-buf-registry
      optional: true
    - job: publish-pypi
      optional: true
    - job: publish-npm
      optional: true
    - job: publish-maven
      optional: true
